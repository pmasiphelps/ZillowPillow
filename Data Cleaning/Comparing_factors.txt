# Importing Data
properties <- fread(input = "https://s3.us-east-2.amazonaws.com/aws-emr-dedicated/data/zillow/properties_2016.csv", 
                    na.strings = "") 
properties <- properties %>%
  mutate(latitude = latitude/1e6, longitude = longitude/1e6)
train <- fread(input = "https://s3.us-east-2.amazonaws.com/aws-emr-dedicated/data/zillow/train_2016_v2.csv",
               na.strings = "")
#Joined Data
allData = properties %>% 
  inner_join(train, by="parcelid") 

colnames(properties)
#Turning all observations into factors for easy comparison
factor_properties = lapply(properties, factor)
factor_allData = lapply(allData, factor)
length(levels(factor_properties$taxvaluedollarcnt))

###Comparing the levels of all variables in properties with the joined dataset

###For the following variables, the factors in each group were the same OR 
#The results were meaningless (ex.latitude and longitude)
###Irrelevant for: parcelid, basementsqft, decktypeid, finishedfloor1squarefeet,
#calculatedfinishedsquarefeet, finishedsquarefeet12, finishedsquarefeet13,
#finishedsquarefeet15, finishedsquarefeet50, finishedsquarefeet6, fips, garagetotalsqft,
#hottuborspa, latitude, longitude, lotsizesquarefeet, poolcnt, poolsizesum, pooltypeid10,
#pooltypeid2, pooltypeid7, propertycountylandusecode, propertyzoningdesc, rawcensustractandblock,
#regionidcity, regionidcounty, regionidneighborhood, regionidzip, storytypeid, yardbuildingsqft17,
#yardbuildingsqft26, yearbuilt, fireplaceflag, structuretaxvaluedollarcnt, taxvaluedollarcnt,
#landtaxvaluedollarcnt, taxamount, taxdelinquencytag, censustractandblock

#airconditioningtypeid levels in full dataset
levels(factor_allData$airconditioningtypeid)
1,3,5,9,11,12,13
1,3,5,9,11,13

  #change 12 (Window unit) to 13 (Yes)
  #this seems like the most logical conversion
  factor_properties$airconditioningtypeid[factor_properties$airconditioningtypeid == 12] <- 13
  
  #Update: both train and imputed only have 1,2,3,4,5,6,7

#architecturalstyletypeid
levels(factor_properties$architecturalstyletypeid)
"2"  "3"  "5"  "7"  "8"  "10" "21" "27"
levels(factor_allData$architecturalstyletypeid)
"2"  "3"  "7"  "8"  "10" "21"

  #recommend dropping from dataset

#bathroomcnt
levels(factor_properties$bathroomcnt)
[1] "0"    "0.5"  "1"    "1.5"  "1.75" "2"    "2.5"  "3"    "3.5"  "4"    "4.5"  "5"    "5.5" 
[14] "6"    "6.5"  "7"    "7.5"  "8"    "8.5"  "9"    "9.5"  "10"   "10.5" "11"   "11.5" "12"  
[27] "12.5" "13"   "14"   "14.5" "15"   "16"   "17"   "18"   "19"   "19.5" "20" 
levels(factor_allData$bathroomcnt)
[1] "0"   "1"   "1.5" "2"   "2.5" "3"   "3.5" "4"   "4.5" "5"   "5.5" "6"   "6.5" "7"   "7.5" "8"  
[17] "8.5" "9"   "10"  "11"  "12"  "15"  "20" 

  #recommend leaving all values as is. the training dataset captures the range (0-20), even if 
  #missing some in between values. recommend changing from factors to numeric

#bedroomcnt
levels(factor_properties$bedroomcnt)
"0"  "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10" "11" "12" "13" "14" "15" "16" "17" "18"
levels(factor_allData$bedroomcnt)
"0"  "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10" "11" "12" "13" "14" "15" "16"

  #same comment as above. change from factor to numeric and keep as is.

#buildingclasstypeid
levels(factor_properties$buildingclasstypeid)
"1" "2" "3" "4" "5"
levels(factor_allData$buildingclasstypeid)
"4"

  #recommend changing 1,2,3,5 in original dataset to 0, change 4 to 1, and make this a dummy
  #variable for "wood/wood + steel frames" (this is the code for 4)
  factor_properties$buildingclasstypeid[factor_properties$buildingclasstypeid %in% c("1","2","3","5")] <- 0
  factor_properties$buildingclasstypeid[factor_properties$buildingclasstypeid == 4] <- 1
  
  #Update: removed variable


#buildingqualitytypeid
levels(factor_properties$buildingqualitytypeid)
"-1" "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10" "11" "12"
levels(factor_allData$buildingqualitytypeid)
"-1" "1"  "4"  "6"  "7"  "8"  "10" "11" "12"

  #recommend leaving as is - change from factor to numeric. theoretically this is a continuous variable, so doesn't
  #matter if we are missing some in between values in train dataset
  
  #update: make following imputations
  factor_properties$buildingqualitytypeid[factor_properties$buildingqualitytypeid == 2] <- 1
  factor_properties$buildingqualitytypeid[factor_properties$buildingqualitytypeid == 3] <- 4
  factor_properties$buildingqualitytypeid[factor_properties$buildingqualitytypeid == 5] <- 6
  factor_properties$buildingqualitytypeid[factor_properties$buildingqualitytypeid == 9] <- 8

#calculatedbathnbr
levels(factor_properties$calculatedbathnbr)
[1] "1"    "1.5"  "2"    "2.5"  "3"    "3.5"  "4"    "4.5"  "5"    "5.5"  "6"    "6.5"  "7"   
[14] "7.5"  "8"    "8.5"  "9"    "9.5"  "10"   "10.5" "11"   "11.5" "12"   "12.5" "13"   "14"  
[27] "14.5" "15"   "16"   "17"   "18"   "19"   "19.5" "20" 
levels(factor_allData$calculatedbathnbr)
[1] "1"   "1.5" "2"   "2.5" "3"   "3.5" "4"   "4.5" "5"   "5.5" "6"   "6.5" "7"   "7.5" "8"   "8.5"
[17] "9"   "10"  "11"  "12"  "15"  "20" 

  #recommend leaving as is, same reasoning as bed/bath count above

#fireplacecnt
levels(factor_properties$fireplacecnt)
[1] "1" "2" "3" "4" "5" "6" "7" "8" "9"
levels(factor_allData$fireplacecnt) 
[1] "1" "2" "3" "4" "5"

  #recommend changing 6,7,8,9 to 5. hopefully the effects of 5+ fireplaces are largely the same.
  #keep as factor
  factor_properties$fireplacecnt[factor_properties$fireplacecnt %in% c("6","7","8","9")] <- "5"
  

#fullbathcnt
levels(factor_properties$fullbathcnt)
[1] "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10" "11" "12" "13" "14" "15" "16" "17" "18" "19"
[20] "20"
levels(factor_allData$fullbathcnt)
[1] "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10" "11" "12" "15" "20"

  #recommend keeping as is - per above reasons

#garagecnt
levels(factor_properties$garagecarcnt)
[1] "0"  "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10" "11" "12" "13" "14" "15" "16" "17" "18"
[20] "19" "20" "21" "24" "25"
levels(factor_allData$garagecarcnt)
[1] "0"  "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10" "11" "13" "14" "24"

  #recommend changing to numeric continuous variable, not a factor. no change

#heatingsystemtypeid
levels(factor_properties$heatingorsystemtypeid)
[1] "1"  "2"  "6"  "7"  "10" "11" "12" "13" "14" "18" "19" "20" "21" "24"
levels(factor_allData$heatingorsystemtypeid)
[1] "1"  "2"  "6"  "7"  "10" "11" "12" "13" "14" "18" "20" "24"

  #recommend changing 8 (gas) and 11 (heat pump) each to 2 (central)
  factor_properties$heatingorsystemtypeid[factor_properties$heatingorsystemtypeid %in% c("8","11")] <- "2"

  #Update: both datasets have same levels

#roomcnt
levels(factor_properties$roomcnt)
[1] "0"  "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10" "11" "12" "13" "14" "15" "16" "17" "18"
[20] "19" "20" "21" "22" "24" "30" "31" "40" "42" "45" "52" "56" "67" "77" "84" "86" "96"
levels(factor_allData$roomcnt)
[1] "0"  "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10" "11" "12" "13" "14" "15" "18"

  #recommend changing: 16 to 15, 17 to 18, and 19-96 to 18. change from factor to numeric
  factor_properties$roomcnt[factor_properties$roomcnt == "16"] <- "15"
  factor_properties$roomcnt[factor_properties$roomcnt == "17"] <- "18"  
  factor_properties$roomcnt[factor_properties$roomcnt %in% 
    c("19", "20", "21", "22", "24", "30", "31", "40", "42", "45", "52", "56", "67", "77", "84", "86", "96")] <- "18"

  #dropped variable

#threequarterbathnbr
levels(factor_properties$threequarterbathnbr)
[1] "1" "2" "3" "4" "5" "6" "7"
levels(factor_allData$threequarterbathnbr)
[1] "1" "2" "3" "4"

  #recommend deleting - we have total bathroom count

#typeconstructiontypeid
levels(factor_properties$typeconstructiontypeid)
[1] "4"  "6"  "10" "11" "13"
levels(factor_allData$typeconstructiontypeid)
[1] "4"  "6"  "13"

  #this variable seems useless. suggest deleting

#unitcnt
levels(factor_properties$unitcnt)
"-1"  "1"   "2"   "3"   "4"   "5"   "6"   "7"   "8"   "9"   "10"  "11" 
"12"  "13"  "14"  "15"  "16"  "17"  "18"  "19"  "20"  "21"  "22"  "23" 
"24"  "25"  "26"  "27"  "28"  "29"  "30"  "31"  "32"  "33"  "34"  "35" 
"36"  "37"  "38"  "39"  "40"  "41"  "42"  "43"  "44"  "45"  "46"  "47" 
"48"  "49"  "50"  "51"  "52"  "53"  "54"  "55"  "56"  "57"  "58"  "59" 
"60"  "61"  "62"  "63"  "64"  "65"  "66"  "67"  "68"  "69"  "70"  "71" 
"72"  "73"  "74"  "75"  "76"  "77"  "78"  "79"  "80"  "81"  "82"  "83" 
"84"  "85"  "86"  "87"  "88"  "89"  "90"  "91"  "92"  "93"  "94"  "95" 
"96"  "97"  "98"  "99"  "100" "101" "102" "103" "104" "105" "106" "107"
"108" "109" "110" "111" "112" "113" "114" "115" "116" "117" "118" "119"
"120" "121" "122" "123" "124" "125" "126" "127" "128" "129" "130" "131"
"132" "133" "134" "135" "136" "137" "138" "139" "140" "141" "142" "143"
"144" "145" "146"
levels(factor_allData$unitcnt)
"-1" "1"   "2"   "3"   "4"   "5"   "6"   "9"   "11"  "66"  "104"


  #recommend changing: 7 to 6; 8 and 10 to 9; 12-40 to 11; 41-105 to 66; 107-997 to 104 (nearest neighbor)
  
  factor_properties$unitcnt[factor_properties$unitcnt == "7"] <- "6"
  factor_properties$unitcnt[factor_properties$unitcnt %in% c("8","10")] <- "9"
  
  factor_properties$unitcnt[factor_properties$unitcnt %in% 
    c("12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28",
    "29","30","31","32","33","34","35","36","37","38","39","40")] <- "11"
    
  factor_properties$unitcnt[factor_properties$unitcnt %in% 
    c("41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59",
    "60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79",
    "80","81","82","83","84","85","86")] <- "66"
  
  factor_properties$unitcnt[factor_properties$unitcnt %in% 
    c("87","88","89","90","91","92","93","94","95","96","97","98","99",
    "100","101","102","103","104","105","106","107","108","109","110",
    "111","112","113","114","115","116","117","118","119","120","121",
    "122","123","124","125","126","127","128","129","130","131","132",
    "133","134","135","136","137","138","139","140","141","142","143","144","145","146")] <- "104"

#numberofstories
levels(factor_properties$numberofstories)
[1] "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9" "10" "11" "12"
levels(factor_allData$numberofstories)
[1] "1" "2" "3" "4"

  #recommend changing 5-41 to 4
  factor_properties$numberofstories[factor_properties$numberofstories %in% 
    c("5","6","7","8","9","10","11","12")] <- "4"

#assessmentyear
levels(factor_properties$assessmentyear)
[1] "2000" "2001" "2002" "2003" "2004" "2005" "2009" "2010" "2011" "2012" "2013" "2014" "2015"
[14] "2016"
levels(factor_allData$assessmentyear)
[1] "2015"

  #recommend dropping variable (only one level in train set, so there's gonna be no effect here)

#taxdelinquencyyear
levels(factor_properties$taxdelinquencyyear)
[1] "0"  "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10" "11" "12" "13" "14" "15" "79" "82" "84"
[20] "86" "87" "88" "90" "91" "92" "93" "94" "95" "96" "97" "98" "99"
levels(factor_allData$taxdelinquencyyear)
[1] "6"  "7"  "8"  "9"  "10" "11" "12" "13" "14" "15" "99"

  #recommend dropping variable - we already have tax delinquency dummy

